.App {
  --square-size: 60px;
  --count: 3;
  min-width: calc(var(--square-size) * var(--count) + var(--square-size));
  flex-grow: 1;
  background-color: var(--background-color);

  display: flex;
  flex-direction: column;    
}

.App > * {
  margin: 0;
}

.App > :not(:last-child) {
  box-shadow: 3px 0px 2px grey;
}

.App > header {
  background-color: var(--primary-color);
  color: var(--text-color);  
  text-align: center;  

  display: flex;
  align-items: center;
  justify-content: center;
  flex-basis: 4vh;  
  min-height: 50px;
}

.App > header > * {
  margin: 0;  
}

.App > main {
  flex: 1;
  
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-around;
}

.App > main .menu {
  display: flex;  
  flex-direction: column;
  width: 100%;
  max-width: 1024px;
  justify-content: space-around;
  align-items: center;
  flex: 1;
}

.App > main .menu button {  
  width: 100%;
  height: var(--elements-size);  
}

.App > main .games-list {
  display: flex;
  flex-direction: column;

  width: calc(100% - var(--spacing));
  max-width: 1024px;
  margin: var(--spacing);  
  align-content: flex-start;
  border: 1px solid var(--secondary-color);
  background-color: var(--primary-color);
  flex: 1;
  /* height: 20vh; */
  min-height: 20vh;
  max-height: 40vh;

  display: grid;
  grid-template-columns: 10% 1fr;
  overflow-y: scroll;
}

/* .App > main .games-list > .header {  
  min-height: 40px;
} */

/* .App > main .games-list > .body {    
} */

.App > main .games-list .cell {
  /* height: var(--large-spacing); */
  border: 1px solid var(--secondary-color);
  padding: var(--small-spacing);
}

.App > main .games-list .header-cell.cell {
  font-weight: bold;  
  text-align: center;  
  position: sticky;
  top: 0;  
  background-color: var(--primary-color);
}

.App > main .games-list .body-cell.cell {
  background-color: white;/* var(--background-color); */
  border: 1px solid var(--secondary-color);
  /* color: var(--secondary-color); */
}

.App > main .games-list .body-cell.cell.hovered {
  background-color: var(--background-color);
  
  /* color: var(--secondary-color); */
}

.App > footer {
  background-color: var(--secondary-color);
  color: var(--text-color);
  text-align: right;
  white-space: nowrap;
}

.App .title,
.App .title .square > * {
  font-size: calc(30px + 2vh);
  white-space: nowrap;
}

.game-wrapper {
  flex: 1;
  width: 100%;
  display: flex;
}
.game {
  display: grid;  
  grid-gap: var(--spacing);    
  grid-template-columns: auto;
  grid-template-rows: 1fr auto;
  grid-template-areas:      
      "board"
      "status";

  min-height: var(--board-size);
  padding-top: var(--spacing);
  flex: 1;
}

.board-wrapper {
  grid-area: board;
  justify-self: center;
  align-self: center;
  flex: 1;

  display: flex;  
  flex-direction: column;
}

.board {
  --board-size: calc(var(--square-size) * var(--count));  
  
  display: grid;
  grid-template-columns: repeat(var(--count), var(--square-size));
  grid-template-rows: repeat(var(--count), var(--square-size) );
  /* border: calc(var(--border-width)*2) var(--border-color) solid; */
}

@keyframes appear {
  from {
    opacity: 0.01;
    transform: scale(3);
  }
  to {
    opacity: 1;
    transform: scale(1);    
  }
}
.board .square {
  border: var(--border-width) solid var(--background-color);
  cursor: pointer;  
  user-select: none;
  background-color: var(--square-background-color);
  display: flex;
  align-items: center;
  justify-content: center;
  outline: 0;
}

.square > * {
  font-size: calc(var(--square-size) - 20px);    
  font-weight: bold;
  animation: appear 0.5s;
}

.square.X > * {
  color: var(--square-color);
}

.square.O > * {
  color: var(--square-secondary-color);
}

.square.win > * {
  color: var(--winner-color);
  transition: all 500ms;
}

.panel-settings {  
  height: 100%;
  width: var(--settings-width);
  position: fixed;
  z-index: 1;
  top: 0;
  left: 0;  
  overflow-x: hidden;
  transition: transform 0.5s;   
  transform: translateX(-100%);
  padding: var(--spacing);
  background-color: var(--primary-color);
}

.panel-settings.opened {
  left: 0;
  transform: translateX(0%);
  transition: transform 0.5s;   
  box-shadow: 3px 0px 2px grey;
  padding-right: calc(var(--spacing) + 30px);
}

.panel-settings > div {
  display: grid;
  grid-auto-rows: minmax(var(--spacing), auto);
  grid-template-columns: repeat(2, 1fr);
  justify-items: center;
  align-items: center;  
  background-color: var(--background-color);
  border: var(--border-width) solid var(--secondary-color);      
  padding: var(--spacing);
}  

.panel-settings div > :not(:last-child) {
  margin-bottom: var(--spacing);
}

.panel-settings div > label {
  width: 100%;
  margin-left: var(--spacing);
  word-break: break-all;
}

.panel-settings div > input {
  width: 50px;
}

.panel-settings .button-square {
  height: var(--square-size);
  width: var(--square-size);
  font-family: serif;  
}
.panel-settings .button-square.on {
  transform: translate(1px, 1px);
  border-top: 2px solid var(--secondary-color);
  border-left: 2px solid var(--secondary-color);
}

button.icon-button.button-settings {  
  --size: 30px;
  color: var(--secondary-color);
  width: var(--size);
  height: var(--size);  
  position: absolute;
  top: 0px;
  left: 0px;
  background: none;
  border: 0;
  z-index: 1000;  
  transition: 0.5s;
  transform: translateX(0);  
  white-space: nowrap;
  float: right;      
}

button.icon-button.button-settings.opened {
  transform: translateX(calc(var(--settings-width) + var(--spacing)*2));
}

.status {
  grid-area: status;
  justify-self: center;
  align-self: center;
  display: flex;
  width: 100%;  
  align-content: center;
  justify-content: center;
  color: var(--text-color);
  box-shadow: 3px 0px 2px grey;

  background-color: var(--primary-color);
  height: var(--square-size);  
}

.status > * {
  margin: 5px;
  align-self: center;    
}
.status .square.X > *,
.status .square.O > * {
  color: var(--secondary-color); 
  margin: 0;
}

@media (min-width: 1900px) and (orientation: landscape) { 
  .panel-settings {
    left: 0;
    transform: translateX(0%);
    transition: transform 0.5s;
    box-shadow: 3px 0px 2px grey;
    padding-right: var(--spacing);
  }
  button.icon-button.button-settings {
    transform: translateX(calc(var(--settings-width) + var(--spacing)*2));
    display: none;
  }
}

@media (max-width: 330px) { 
  .panel-settings.opened {    
    width: calc(100% - var(--spacing) - 30px);
  }  

  button.icon-button.button-settings.opened {    
    left: unset;
    right: 0;
    top: 0;
    float: none;
    transform: unset;
  }
}